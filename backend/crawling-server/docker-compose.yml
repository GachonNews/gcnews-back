services:
  db:
    image: mysql:8.0
    container_name: my-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d   # ← 여기!
    networks:
      - crawling_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-umyuser", "-p1234"]
      interval: 5s
      timeout: 5s
      retries: 20

  kafka:
    image: bitnami/kafka:latest
    container_name: my-kafka
    ports:
      - "9092:9092"
    environment:
      # 필수 KRaft 설정
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=4K3q9VdZT16IJIlJXaBknQ # 임의의 UUID
      
      # 컨트롤러 리스너 설정 추가
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093,PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      
      # 보안 프로토콜 매핑
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      
      # 초기 컨트롤러 설정
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      
    networks:
      - crawling_net
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092"]

  crawling-server:
    build: .
    container_name: crawling-server
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9001:9001"
    environment:
      - SPRING_PROFILES_ACTIVE=local
    networks:
      - crawling_net
    command: ["java", "-jar", "app.jar", "--spring.batch.job.names=newsCrawlingJob"]

networks:
  crawling_net:
    driver: bridge
