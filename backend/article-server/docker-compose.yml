services:
  article-db:
      image: mysql:8.0
      container_name: article-mysql
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: 1234
        MYSQL_DATABASE: article_db
        MYSQL_USER: article_user
        MYSQL_PASSWORD: 1234
      ports:
        - "3308:3306"
      volumes:
        - ./article-mysql-init:/docker-entrypoint-initdb.d
        - ./article-mysql-data:/var/lib/mysql
      command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      networks:
        - backend
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uarticle_user", "-p1234"]
        interval: 5s
        timeout: 5s
        retries: 20

  kafka:
    image: bitnami/kafka:latest
    container_name: my-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=4K3q9VdZT16IJIlJXaBknQ
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093,PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list > /dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 15

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - backend

  article-server:
    build: ./article-server
    container_name: article-server
    depends_on:
      - eureka-server
      - article-db
      - kafka
    ports:
      - "9002:9002"
    environment:
      - EUREKA_SERVER=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://article-db:3306/article_db
      - SPRING_DATASOURCE_USERNAME=article_user
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - backend

networks:
  article_net:
    driver: bridge
